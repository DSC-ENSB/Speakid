# -*- coding: utf-8 -*-
"""diagnostics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X6eymlY_fLEH8zTWi4-GOtyGeN_eQTQA
"""

import numpy as np
import pandas as pd
import seaborn as sb
import matplotlib.pyplot as plt
import sklearn as sk
import csv
import pickle

from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder 
from sklearn.cluster import KMeans

file = pd.read_table('/content/drive/MyDrive/data.csv')

file.head()

df = pd.DataFrame(data=file)
imputer = SimpleImputer(strategy="median")
data_num = df[["age", "SibNum","Tvtime", "Etime"]]
imputer.fit(data_num)
X = imputer.transform(data_num)
data_num_tr = pd.DataFrame(X, columns = data_num.columns)

data_cat = df[["sexe","Sib","SibSexe","Pos","Twins",
			"Sib_Lang_Prob", "Parents_Lang_Prob", "Problem", 
			"Violance", "Agressive", "Autism", "MomChronicD", 
			"Disease", "NormalPrgnancy", "MomRH", "EarlyBirth", 
			"Birth", "WeightProb", "NormalBreathe", "NormalScream", 
			"NormalColor", "IntensiveCare", "Frenulum", "TonguePro", 
			"Surgery", "Snoring", "HearingProb", "VisionProb", "PSY", 
			"MuscleCramps", "Fever", "NormalDev", "Vaccin", "Prononciation", 
			"Rep", "Introvert", "Stubborn", "EnjoyPlay", "Hyperactive", "FocusProb", 
			"LostInImagination", "TV", "Electronics"]]

col_cat = ["sexe","Sib","SibSexe","Pos","Twins",
			"Sib_Lang_Prob", "Parents_Lang_Prob", "Problem", 
			"Violance", "Agressive", "Autism", "MomChronicD", 
			"Disease", "NormalPrgnancy", "MomRH", "EarlyBirth", 
			"Birth", "WeightProb", "NormalBreathe", "NormalScream", 
			"NormalColor", "IntensiveCare", "Frenulum", "TonguePro", 
			"Surgery", "Snoring", "HearingProb", "VisionProb", "PSY", 
			"MuscleCramps", "Fever", "NormalDev", "Vaccin", "Prononciation", 
			"Rep", "Introvert", "Stubborn", "EnjoyPlay", "Hyperactive", "FocusProb", 
			"LostInImagination", "TV", "Electronics"]

data_cat_encoded = []
data_categories = []
for x in data_cat:
    data_cat_encod, data_categ = pd.factorize(data_cat[x])
    data_cat_encoded.append(data_cat_encod)
    data_categories.append(data_categ)

data_cat_encoded = pd.DataFrame(np.transpose(data_cat_encoded))
data_cat_encoded.info()
imputer = SimpleImputer(missing_values= -1, strategy="most_frequent")
imputer.fit(data_cat_encoded)
data_cat_enc = imputer.transform(data_cat_encoded)
data_cat_tr = pd.DataFrame(data_cat_enc, columns = data_cat.columns)
data_cat_tr.describe()

data_tr = pd.concat([data_num_tr, data_cat_tr], axis=1)
data_tr.head()

classes = 2 #change this number to the number of possible outcomes
kmeans = KMeans(n_clusters=classes)
res = kmeans.fit(data_tr)

knnPickle = open('knnpickle_file', 'wb') 
pickle.dump(res, knnPickle)

# load the model from disk
loaded_model = pickle.load(open('knnpickle_file', 'rb'))
result = loaded_model.predict(X_test)